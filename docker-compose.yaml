---
services:
  database:
    image: postgres:16
    container_name: idm-db
    volumes:
      - dbdata:/var/lib/postgresql/data
    env_file:
      - db.env
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres", "-d", "idm"]
      interval: 30s
      timeout: 5s
      retries: 5
      start_period: 60s  

  # kafka:
  #   image: apache/kafka:latest
  #   container_name: kafka
  #   ports:
  #     - 9092:9092
  #   environment:
  #     KAFKA_NODE_ID: 1
  #     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
  #     KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT_HOST://localhost:9092,PLAINTEXT://kafka:19092'
  #     KAFKA_PROCESS_ROLES: 'broker,controller'
  #     KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka:29093'
  #     KAFKA_LISTENERS: 'CONTROLLER://:29093,PLAINTEXT_HOST://:9092,PLAINTEXT://:19092'
  #     KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
  #     KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
  #     CLUSTER_ID: '4L6g3nShT-eMCtK--X86sw'
  #     KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  #     KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
  #     KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
  #     KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
  #     KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'

  user-service:
    build: user-service/
    container_name: user-service
    ports:
      - 80:80
    env_file:
      - user.env
    depends_on:
      - database

volumes:
  dbdata: